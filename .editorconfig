# Remove the line below if you want to inherit .editorconfig settings from higher directories
root = true

# All Language files
[*]

# Indentation and spacing
indent_size = 4
indent_style = space
trim_trailing_whitespace = true

# New line preferences
end_of_line = lf
insert_final_newline = false


#markdown files
[*.md]
indent_size = 2

[*.{yaml,yml}]
indent_size = 2

[*.json]
indent_size = 2

[*.{xml,resx}]
indent_size = 2

[*.{props,config,targets,nuspec}]
indent_size = 2

[*.{csproj}]
indent_size = 2

[*.{sln}]
indent_size = 4
indent_style = tab
tab_width = 4

[*{_AssemblyInfo.cs,.notsupported.cs,AsmOffsets.cs}]
generated_code = true

# C# files
[*.cs]
indent_size = 4
indent_style = tab
tab_width = 4

#### .NET Coding Conventions ####

# Organize usings
dotnet_separate_import_directive_groups = false
dotnet_sort_system_directives_first = true

# this. and Me. preferences
dotnet_style_qualification_for_event = false:silent
dotnet_style_qualification_for_field = false:silent
dotnet_style_qualification_for_method = false:silent
dotnet_style_qualification_for_property = false:silent

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:silent

# Expression-level preferences
dotnet_style_coalesce_expression = true:silent
dotnet_style_collection_initializer = true:silent
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_null_propagation = true:silent
dotnet_style_object_initializer = true:silent
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion

# Field preferences
dotnet_style_readonly_field = true:suggestion

# Parameter preferences
dotnet_code_quality_unused_parameters = all:suggestion

#### C# Coding Conventions ####

# var preferences
csharp_style_var_elsewhere = false:warning
csharp_style_var_for_built_in_types = false:silent
csharp_style_var_when_type_is_apparent = false:silent

# Expression-bodied members
csharp_style_expression_bodied_accessors = when_on_single_line:silent
csharp_style_expression_bodied_constructors = when_on_single_line:silent
csharp_style_expression_bodied_indexers = when_on_single_line:silent
csharp_style_expression_bodied_lambdas = true:silent
csharp_style_expression_bodied_local_functions = false:silent
csharp_style_expression_bodied_methods = when_on_single_line:silent
csharp_style_expression_bodied_operators = when_on_single_line:silent
csharp_style_expression_bodied_properties = when_on_single_line:silent

# Pattern matching preferences
csharp_style_pattern_matching_over_as_with_null_check = true:silent
csharp_style_pattern_matching_over_is_with_cast_check = true:silent
csharp_style_prefer_switch_expression = true:suggestion

# Null-checking preferences
csharp_style_conditional_delegate_call = true:silent

# Modifier preferences
csharp_prefer_static_local_function = true:suggestion
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async

# Code-block preferences
csharp_prefer_braces = true:warning
csharp_prefer_simple_using_statement = true:suggestion

# Expression-level preferences
csharp_prefer_simple_default_expression = true:silent
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_inlined_variable_declaration = true:silent
csharp_style_pattern_local_over_anonymous_function = true:suggestion
csharp_style_prefer_index_operator = true:suggestion
csharp_style_prefer_range_operator = true:suggestion
csharp_style_throw_expression = true:silent
csharp_style_unused_value_assignment_preference = discard_variable:suggestion
csharp_style_unused_value_expression_statement_preference = discard_variable:silent

# 'using' directive preferences
csharp_using_directive_placement = outside_namespace:silent

#### C# Formatting Rules ####

# New line preferences
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_labels = one_less_than_current
csharp_indent_switch_labels = true

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Wrapping preferences
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = true

#### Naming styles ####

# Naming rules

dotnet_naming_rule.parameter_should_be_camelcase.severity = suggestion
dotnet_naming_rule.parameter_should_be_camelcase.symbols = parameter
dotnet_naming_rule.parameter_should_be_camelcase.style = camelcase

dotnet_naming_rule.constant_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.constant_should_be_pascal_case.symbols = constant
dotnet_naming_rule.constant_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.public_field_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.public_field_should_be_pascal_case.symbols = public_field
dotnet_naming_rule.public_field_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.interface_should_be_begins_with_i.severity = suggestion
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.constant_ish_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.constant_ish_should_be_pascal_case.symbols = constant_ish
dotnet_naming_rule.constant_ish_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.static_field_public_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.static_field_public_should_be_pascal_case.symbols = static_field_public
dotnet_naming_rule.static_field_public_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.static_field_should_be_static_field.severity = suggestion
dotnet_naming_rule.static_field_should_be_static_field.symbols = static_field
dotnet_naming_rule.static_field_should_be_static_field.style = static_field

dotnet_naming_rule.instance_field_should_be_instancefield.severity = suggestion
dotnet_naming_rule.instance_field_should_be_instancefield.symbols = instance_field
dotnet_naming_rule.instance_field_should_be_instancefield.style = instancefield

dotnet_naming_rule.type_parameter_should_start_with_t.severity = suggestion
dotnet_naming_rule.type_parameter_should_start_with_t.symbols = typeparameter
dotnet_naming_rule.type_parameter_should_start_with_t.style = starts_with_t

dotnet_naming_symbols.typeparameter.applicable_kinds = type_parameter
dotnet_naming_symbols.typeparameter.applicable_accessibilities = *
dotnet_naming_symbols.typeparameter.required_modifiers =

dotnet_naming_style.starts_with_t.required_prefix = T
dotnet_naming_style.starts_with_t.required_suffix =
dotnet_naming_style.starts_with_t.word_separator =
dotnet_naming_style.starts_with_t.capitalization = pascal_case

# Symbol specifications

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = *
dotnet_naming_symbols.interface.required_modifiers =

dotnet_naming_symbols.public_field.applicable_kinds = field
dotnet_naming_symbols.public_field.applicable_accessibilities = public, internal, protected, protected_internal
dotnet_naming_symbols.public_field.required_modifiers =

dotnet_naming_symbols.static_field.applicable_kinds = field
dotnet_naming_symbols.static_field.applicable_accessibilities = private
dotnet_naming_symbols.static_field.required_modifiers = static

dotnet_naming_symbols.types.applicable_kinds = class, struct, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers =

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method, delegate
dotnet_naming_symbols.non_field_members.applicable_accessibilities = *
dotnet_naming_symbols.non_field_members.required_modifiers =

dotnet_naming_symbols.static_field_public.applicable_kinds = field
dotnet_naming_symbols.static_field_public.applicable_accessibilities = public, internal, protected, protected_internal
dotnet_naming_symbols.static_field_public.required_modifiers = static

dotnet_naming_symbols.constant.applicable_kinds = field, local
dotnet_naming_symbols.constant.applicable_accessibilities = *
dotnet_naming_symbols.constant.required_modifiers = const

dotnet_naming_symbols.instance_field.applicable_kinds = field
dotnet_naming_symbols.instance_field.applicable_accessibilities = private
dotnet_naming_symbols.instance_field.required_modifiers =

dotnet_naming_symbols.constant_ish.applicable_kinds = field
dotnet_naming_symbols.constant_ish.applicable_accessibilities = public, internal, private, protected, protected_internal
dotnet_naming_symbols.constant_ish.required_modifiers = readonly, static

dotnet_naming_symbols.parameter.applicable_kinds = parameter
dotnet_naming_symbols.parameter.applicable_accessibilities = *
dotnet_naming_symbols.parameter.required_modifiers =

dotnet_naming_rule.locals_should_be_camel_case.severity = suggestion
dotnet_naming_rule.locals_should_be_camel_case.symbols = locals
dotnet_naming_rule.locals_should_be_camel_case.style = camelcase

dotnet_naming_symbols.locals.applicable_kinds = local, local_function
dotnet_naming_symbols.locals.applicable_accessibilities = *
dotnet_naming_symbols.locals.required_modifiers =

dotnet_naming_rule.namespaces_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.namespaces_should_be_pascal_case.symbols = namespaces
dotnet_naming_rule.namespaces_should_be_pascal_case.style = pascal_case

dotnet_naming_symbols.namespaces.applicable_kinds = namespace
dotnet_naming_symbols.namespaces.applicable_accessibilities = *
dotnet_naming_symbols.namespaces.required_modifiers =

# Naming styles

dotnet_naming_style.pascal_case.required_prefix =
dotnet_naming_style.pascal_case.required_suffix =
dotnet_naming_style.pascal_case.word_separator =
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix =
dotnet_naming_style.begins_with_i.word_separator =
dotnet_naming_style.begins_with_i.capitalization = pascal_case

dotnet_naming_style.static_field.required_prefix = s_
dotnet_naming_style.static_field.required_suffix =
dotnet_naming_style.static_field.word_separator =
dotnet_naming_style.static_field.capitalization = camel_case

dotnet_naming_style.instancefield.required_prefix = _
dotnet_naming_style.instancefield.required_suffix =
dotnet_naming_style.instancefield.word_separator =
dotnet_naming_style.instancefield.capitalization = camel_case

dotnet_naming_style.camelcase.required_prefix =
dotnet_naming_style.camelcase.required_suffix =
dotnet_naming_style.camelcase.word_separator =
dotnet_naming_style.camelcase.capitalization = camel_case

# Code Analysis default category values
dotnet_analyzer_diagnostic.category-design.severity = suggestion
dotnet_analyzer_diagnostic.category-documentation.severity = suggestion
dotnet_analyzer_diagnostic.category-globalization.severity = suggestion
dotnet_analyzer_diagnostic.category-interoperability.severity = suggestion
dotnet_analyzer_diagnostic.category-maintainability.severity = suggestion
dotnet_analyzer_diagnostic.category-performance.severity = suggestion
dotnet_analyzer_diagnostic.category-reliability.severity = suggestion
dotnet_analyzer_diagnostic.category-security.severity = suggestion
dotnet_analyzer_diagnostic.category-usage.severity = suggestion
dotnet_analyzer_diagnostic.category-naming.severity = suggestion
dotnet_analyzer_diagnostic.category-publish.severity = suggestion

# Code Analysis default category overrides
dotnet_diagnostic.CA1002.severity = none	#CA1002:  Don't expose generic lists
dotnet_diagnostic.CA1004.severity = none	#CA1004:  Generic methods should expose type param
dotnet_diagnostic.CA1006.severity = none	#CA1006:  dont nest generics in memember signatures
dotnet_diagnostic.CA1007.severity = none	#CA1007:  Use generics where appropriate
dotnet_diagnostic.CA1008.severity = none	#CA1008:  Enums should have zero value
dotnet_diagnostic.CA1010.severity = none	#CA1010:  Collections should implement generic interface
dotnet_diagnostic.CA1018.severity = error	#CA1018:  Mark attributes with attribute usag
dotnet_diagnostic.CA1020.severity = none	#CA1020:  Avoid namespaces with few types
dotnet_diagnostic.CA1021.severity = none	#CA1021:  Avoid out parameters?
dotnet_diagnostic.CA1024.severity = none	#CA1024:  Use properties where appripriate
dotnet_diagnostic.CA1025.severity = none	#CA1025:  Replace retitive args with params arra
dotnet_diagnostic.CA1030.severity = none	#CA1030:  Use events where appropriat
dotnet_diagnostic.CA1031.severity = none	#CA1031:  Dont catch general exceptions?
dotnet_diagnostic.CA1032.severity = none	#CA1032:  Implement standard exception constructors>
dotnet_diagnostic.CA1033.severity = none	#CA1033:  Interface methods should be callable by child types?
dotnet_diagnostic.CA1034.severity = none	#CA1034:  Nested types should not be visible?
dotnet_diagnostic.CA1045.severity = none	#CA1045:  Dont pass by ref
dotnet_diagnostic.CA1051.severity = warning #CA1051:  Do not declare visible instance fields
dotnet_diagnostic.CA1059.severity = none	#CA1059:  Members should not expose certain concrete types
dotnet_diagnostic.CA1060.severity = none	#CA1060:  Move ptr/invokes to nativemethods?
dotnet_diagnostic.CA1062.severity = none	#CA1062:  validate (null check) args of public methods?
dotnet_diagnostic.CA1063.severity = none	#CA1063:  Implement IDisposable correctly
dotnet_diagnostic.CA1065.severity = none	#CA1065:  Dont raise exceptions unexpectedly
dotnet_diagnostic.CA1300.severity = none	#CA1300:  Specify msg box options
dotnet_diagnostic.CA1301.severity = none	#CA1301:  avoid dupe accelerator
dotnet_diagnostic.CA1303.severity = none	#CA1303:  don't pass literals as localized

dotnet_diagnostic.CA1502.severity = none	#CA1502:  Avoid excessive complexity (cond branch)
dotnet_diagnostic.CA1505.severity = none	#CA1505:  Avoid unmaintanable code
dotnet_diagnostic.CA1506.severity = none	#CA1506:  Avoid class coupling

dotnet_diagnostic.CA1707.severity = none	#CA1707:  Identifiers should not contain underscores
dotnet_diagnostic.CA1709.severity = none	#CA1709:  identifiers should be cased correctly
dotnet_diagnostic.CA1710.severity = none	#CA1710:  identifiers should be cased correctly?
dotnet_diagnostic.CA1717.severity = none	#CA1717:  FlagAttrbiutes should have plural names?
dotnet_diagnostic.CA1720.severity = none	#CA1720:  Identifiers should not contain type names
dotnet_diagnostic.CA1721.severity = none	#CA1721:  Property names should not match get methods
dotnet_diagnostic.CA1724.severity = none	#CA1724:  Type names should not match namespaces?
dotnet_diagnostic.CA1726.severity = none	#CA1726:  Use preferred terms
dotnet_diagnostic.CA1801.severity = none	#CA1801:  Review unused parameters
dotnet_diagnostic.CA1802.severity = none	#CA1802:  Use literals where appropriate
dotnet_diagnostic.CA1806.severity = none	#CA1806:  dont ignore method results
dotnet_diagnostic.CA1811.severity = none	#CA1811:  avoid uncalled private code
dotnet_diagnostic.CA1812.severity = none	#CA1812:  avoid uninstantiated internal classes - true
dotnet_diagnostic.CA1814.severity = none	#CA1814:  prefer jagged arrays over multidimensional
dotnet_diagnostic.CA1816.severity = none	#CA1816:  call GC suppress finalize correcly
dotnet_diagnostic.CA1819.severity = none	#CA1819:  properties should not return arrays
dotnet_diagnostic.CA1822.severity = warning	#CA1822:  Mark members as static
dotnet_diagnostic.CA1901.severity = error	#CA1901:  P/invoke should be portable
dotnet_diagnostic.CA2000.severity = none	#CA2000:  Dispose objects before losing scope

dotnet_diagnostic.CA2104.severity = none	#CA2104:  remove calls to GC.keep alive
dotnet_diagnostic.CA2200.severity = error	#CA2200:  rethrow to preserve stack
dotnet_diagnostic.CA2201.severity = none	#CA2201:  do not raise reserved exceptions
dotnet_diagnostic.CA2204.severity = none	#CA2204:  Literals should be spelled correctly
dotnet_diagnostic.CA2210.severity = none	#CA2210:  Assemblies should have valid strong name
dotnet_diagnostic.CA2227.severity = none	#CA2227:  Collection properties should be readonly
dotnet_diagnostic.CA2228.severity = none	#CA2228:  Dont ship unreleased resource formats
dotnet_diagnostic.CA2232.severity = none	#CA2232:  mark windows form entries with STATthread
dotnet_diagnostic.CA2233.severity = none	#CA2233:  Operations should not overflow

dotnet_diagnostic.IDE0090.severity = none	#IDE0090: Simplify new expressions

dotnet_code_quality.ca1711.allowed_suffixes = Permission|Permissions #CA1711: Identifiers should not have incorrect suffix - we allow "Permission" as the IPermission interface is obsolete and so this suffix should no longer be restricted to implementations of IPermission

dotnet_style_prefer_conditional_expression_over_return = false
dotnet_style_prefer_conditional_expression_over_assignment = false

csharp_style_implicit_object_creation_when_type_is_apparent = false
